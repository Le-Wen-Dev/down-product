const puppeteer = require("puppeteer");
const axios = require("axios");
const cheerio = require("cheerio");
const fs = require("fs");
const path = require("path");

// H√†m l·∫•y t·∫•t c·∫£ c√°c li√™n k·∫øt s·∫£n ph·∫©m t·ª´ m·ªôt trang web
const getProductLinksFromPage = async (url) => {
    try {
        const response = await axios.get(url);
        const $ = cheerio.load(response.data);

        // T√¨m t·∫•t c·∫£ c√°c li√™n k·∫øt s·∫£n ph·∫©m trong th·∫ª <h2 class="product-name-no-ellipsis p-name-list">
        const links = [];
        $("h2.product-name-no-ellipsis.p-name-list a").each((index, element) => {
            const link = $(element).attr("href");
            if (link) {
                links.push(link);
            }
        });

        return links;
    } catch (error) {
        console.error(`‚ùå L·ªói khi l·∫•y c√°c link t·ª´ trang ${url}:`, error.message);
        return [];
    }
};

// H√†m l·∫•y link c·ªßa trang ti·∫øp theo
const getNextPageLink = ($) => {
    // T√¨m link c·ªßa trang ti·∫øp theo
    const nextPage = $("a.next").attr("href"); // Ho·∫∑c class kh√°c n·∫øu c√≥
    return nextPage ? nextPage : null;
};

// H√†m qu√©t c√°c s·∫£n ph·∫©m t·ª´ t·∫•t c·∫£ c√°c trang
const scrapeAllProductLinks = async (startUrl) => {
    let browser;
    let allProductLinks = [];
    try {
        browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();

        let currentPageUrl = startUrl;
        let hasNextPage = true;

        while (hasNextPage) {
            console.log(`üîó ƒêang qu√©t trang: ${currentPageUrl}`);
            await page.goto(currentPageUrl, { waitUntil: "networkidle2" });

            // L·∫•y c√°c link s·∫£n ph·∫©m t·ª´ trang hi·ªán t·∫°i
            const productLinks = await getProductLinksFromPage(currentPageUrl);
            allProductLinks = allProductLinks.concat(productLinks);
            console.log(`T√¨m th·∫•y ${productLinks.length} li√™n k·∫øt s·∫£n ph·∫©m tr√™n trang ${currentPageUrl}`);

            // T√¨m trang ti·∫øp theo
            const nextPageUrl = await page.evaluate(() => {
                const nextPageLink = document.querySelector("a.next");
                return nextPageLink ? nextPageLink.href : null;
            });

            if (nextPageUrl) {
                currentPageUrl = nextPageUrl; // Chuy·ªÉn sang trang ti·∫øp theo
            } else {
                hasNextPage = false; // Kh√¥ng c√≤n trang ti·∫øp theo
            }
        }

        console.log(`‚úÖ ƒê√£ qu√©t t·∫•t c·∫£ s·∫£n ph·∫©m. T·ªïng s·ªë li√™n k·∫øt s·∫£n ph·∫©m: ${allProductLinks.length}`);

        // L∆∞u danh s√°ch link v√†o file JSON
        const filePath = path.join(__dirname, "product_links.json");
        fs.writeFileSync(filePath, JSON.stringify(allProductLinks, null, 2), "utf-8");
        console.log(`‚úÖ ƒê√£ l∆∞u ${allProductLinks.length} li√™n k·∫øt s·∫£n ph·∫©m v√†o file ${filePath}`);

        return allProductLinks;
    } catch (error) {
        console.error("‚ùå L·ªói qu√©t c√°c link:", error.message);
        return [];
    } finally {
        if (browser) {
            await browser.close();
        }
    }
};

// üü¢ Thay th·∫ø b·∫±ng URL c·ªßa trang danh m·ª•c n∆°i ch·ª©a c√°c li√™n k·∫øt s·∫£n ph·∫©m
const startUrl = "https://www.fahasa.com/sach-trong-nuoc.html"; // Thay URL theo nhu c·∫ßu

scrapeAllProductLinks(startUrl);
