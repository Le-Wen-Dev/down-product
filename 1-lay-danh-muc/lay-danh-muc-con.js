const puppeteer = require("puppeteer");
const fs = require("fs");

const scrapeCategoryLinks = async (categoryUrl) => {
    let browser;
    try {
        browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();

        // M·∫£ng ch·ª©a t·∫•t c·∫£ c√°c link danh m·ª•c
        let allCategoryLinks = [];

        // Truy c·∫≠p v√†o trang danh m·ª•c cha
        await page.goto(categoryUrl, { waitUntil: "networkidle2" });

        // L·∫•y t·∫•t c·∫£ c√°c link danh m·ª•c con t·ª´ class 'm-parent-category-list'
        const categoryLinks = await page.evaluate(() => {
            return Array.from(document.querySelectorAll('.m-child-category-list li a'))
                .map(a => a.href);  // Tr√≠ch xu·∫•t c√°c link danh m·ª•c con
        });

        console.log(`T√¨m th·∫•y ${categoryLinks.length} danh m·ª•c con`);

        allCategoryLinks = allCategoryLinks.concat(categoryLinks);

        // L·∫∑p qua c√°c danh m·ª•c con ƒë·ªÉ ki·ªÉm tra n·∫øu c√≥ th√™m danh m·ª•c con c·∫•p s√¢u h∆°n
        for (const categoryLink of categoryLinks) {
            console.log(`üîç ƒêang qu√©t danh m·ª•c con: ${categoryLink}`);
            await page.goto(categoryLink, { waitUntil: "networkidle2" });

            // L·∫•y c√°c link danh m·ª•c con c·∫•p s√¢u h∆°n
            const subCategoryLinks = await page.evaluate(() => {
                return Array.from(document.querySelectorAll('.m-child-category-list li a'))
                    .map(a => a.href);  // Tr√≠ch xu·∫•t c√°c link danh m·ª•c con s√¢u h∆°n
            });

            console.log(`T√¨m th·∫•y ${subCategoryLinks.length} danh m·ª•c con c·∫•p s√¢u`);
            allCategoryLinks = allCategoryLinks.concat(subCategoryLinks);
        }

        // L∆∞u danh s√°ch link danh m·ª•c v√†o file JSON
        fs.writeFileSync("category_links.json", JSON.stringify(allCategoryLinks, null, 2));
        console.log("üìÇ ƒê√£ l∆∞u danh s√°ch link danh m·ª•c v√†o category_links.json");

        return allCategoryLinks;

    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y link danh m·ª•c:", error.message);
    } finally {
        if (browser) {
            await browser.close();
        }
    }
};

// üü¢ Thay th·∫ø URL danh m·ª•c cha ·ªü ƒë√¢y
const categoryPage = "https://www.fahasa.com/all-category.html?order=num_orders&limit=24&p=1"; // V√≠ d·ª• URL c·ªßa danh m·ª•c cha

scrapeCategoryLinks(categoryPage);

// code nay lay tat ca danh muc dau vao la danh muc cha dau ra la link danh muc con